#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass report
\use_default_options true
\maintain_unincluded_children false
\language french
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format pdf2
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0mm
\quotes_language swedish
\papercolumns 1
\papersides 1
\paperpagestyle default
\bullet 0 0 17 -1
\bullet 1 0 15 -1
\bullet 2 0 0 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section*
Exemples de code
\end_layout

\begin_layout Standard
write(o);
\end_layout

\begin_layout Standard
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Standard
x = 0;
\end_layout

\begin_layout Standard
write(o);
\end_layout

\begin_layout Standard
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Standard
x = read();
\end_layout

\begin_layout Standard
write(x);
\end_layout

\begin_layout Standard
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Standard
x = 2 + read();
\end_layout

\begin_layout Standard
write(2*x);
\end_layout

\begin_layout Standard
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Standard
x1 = 2;
\end_layout

\begin_layout Standard
y2 = read();
\end_layout

\begin_layout Standard
zz = 2*(x1+(y2-1));
\end_layout

\begin_layout Standard
write(zz);
\end_layout

\begin_layout Section*
Propriétés
\end_layout

\begin_layout Itemize
pas de déclaration de variables
\end_layout

\begin_layout Itemize
fin d'instruction: 
\begin_inset Quotes sld
\end_inset

;
\begin_inset Quotes srd
\end_inset


\end_layout

\begin_layout Itemize
pas de définition de fonctions
\end_layout

\begin_layout Itemize
pas de types explicite
\end_layout

\begin_layout Itemize
on traite uniquement des entiers
\end_layout

\begin_layout Itemize
toutes les variables sont globales
\end_layout

\begin_layout Itemize
affectation: 
\begin_inset Quotes sld
\end_inset

=
\begin_inset Quotes srd
\end_inset


\end_layout

\begin_layout Itemize
opérateurs: +, -, *, / avec priorité
\end_layout

\begin_layout Itemize
uniquement des séquences (pas de boucles ou de conditions)
\end_layout

\begin_layout Itemize
identificateurs comme en C
\end_layout

\begin_layout Subsection*
Instructions
\end_layout

\begin_layout Standard
- write();
\end_layout

\begin_layout Standard
- affectation
\end_layout

\begin_layout Subsection*
Expressions
\end_layout

\begin_layout Standard
+, -, * , /
\end_layout

\begin_layout Standard
entiers
\end_layout

\begin_layout Standard
parenthèses
\end_layout

\begin_layout Standard
read()
\end_layout

\begin_layout Section*
Règles de grammaire
\end_layout

\begin_layout Standard
G = (X, T, N, 
\begin_inset Formula $\pi$
\end_inset

)
\end_layout

\begin_layout Standard
X: Symbole de départ 
\begin_inset Formula $\in N$
\end_inset

 = Programme
\end_layout

\begin_layout Standard
T: Ensemble fini de symboles = {+, -, /, *, CONST, READ, WRITE, ;, IDF,
 (, ), =}
\end_layout

\begin_layout Standard
N: Ensemble fini de symboles = {Programme, Instruction, Affectation, Ecriture,
 Expression, Lecture, Operation}s
\end_layout

\begin_layout Standard
\begin_inset Formula $\pi$
\end_inset

: Ensemble de règles
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Programme -> Instruction*
\end_layout

\begin_layout Standard
Instruction -> Affectation | Écriture
\end_layout

\begin_layout Standard
Affectation -> Identificateur = Expression;
\end_layout

\begin_layout Standard
Ecriture -> WRITE(Expression);
\end_layout

\begin_layout Standard
Expression -> CONST | IDF | Lecture | Expression Opérateur Expression |
 (Expression)
\end_layout

\begin_layout Standard
Lecture -> READ();
\end_layout

\begin_layout Standard
Opérateur -> + | - | * | /
\end_layout

\end_body
\end_document
